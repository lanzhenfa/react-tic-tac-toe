{"ast":null,"code":"var _jsxFileName = \"/Users/me/Desktop/code/mine/git/web/react-tic-tac-toe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n/**\n * 函数组件\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    style: props.style,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    var board = [];\n\n    for (let j = 0; j < 3; j++) {\n      board.push( /*#__PURE__*/_jsxDEV(Square, {\n        value: this.props.squares[i + j * 3],\n        onClick: () => this.props.onClick(i + j * 3),\n        style: this.props.style(i + j * 3)\n      }, i + j * 3, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this));\n    }\n\n    return board;\n  }\n\n  render() {\n    var board = [];\n\n    for (let i = 0; i < 3; i++) {\n      board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: this.renderSquare(i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      order: false,\n      //排列方式，默认升序\n      history: [{\n        squares: Array(9).fill(null),\n        coordinates: [1, 1] //坐标\n\n      }],\n      stepNumber: 0,\n      //正在查看哪一项历史纪录\n      xIsNext: true //默认 '玩家X' 先手\n\n    };\n  }\n\n  handleBoardClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1]; //使用最新一次历史记录来确定并展示游戏的状态\n\n    const squares = current.squares.slice(); //创建副本，不可变对象\n\n    const raw = parseInt(i / 3) + 1;\n    const column = (i + 1) % 3 === 0 ? 3 : (i + 1) % 3;\n\n    if (calculateWinner(squares) || squares[i]) {\n      //决出胜者 或 格子填满时不做处理\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O'; //更新玩家\n\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        coordinates: [raw, column]\n      }]),\n      //不会改变原数组\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext //切换玩家\n\n    });\n  }\n\n  handleBoardStyle(winner, i) {\n    const style = {\n      background: 'yellow'\n    };\n    return winner && winner.indexOf(i) > -1 ? style : null;\n  }\n\n  handleHistoryClick(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  handleOrderClick() {\n    const order = this.state.order;\n    this.setState({\n      order: !order\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber]; //使用最新一次历史记录来确定并展示游戏的状态\n\n    const winner = calculateWinner(current.squares); //判断胜者玩家\n\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move + '  (' + step.coordinates + ')' : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: move === this.state.stepNumber ? 'history-highlight' : 'history-normal' //加粗显示当前选择的项目\n          ,\n          onClick: () => this.handleHistoryClick(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this);\n    });\n\n    if (this.state.order) {\n      //改变排列方式\n      moves.reverse();\n    }\n\n    let order = this.state.order ? 'Ascending' : 'Descending';\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + current.squares[winner[0]];\n    } else if (this.state.stepNumber === 9) {\n      //平局\n      status = 'Draw';\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleBoardClick(i),\n          style: i => this.handleBoardStyle(winner, i) //高亮赢家连续格子\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.handleOrderClick(),\n          children: order\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return lines[i];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 193,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/me/Desktop/code/mine/git/web/react-tic-tac-toe/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","style","value","Board","Component","renderSquare","i","board","j","push","squares","render","Game","constructor","state","order","history","Array","fill","coordinates","stepNumber","xIsNext","handleBoardClick","slice","current","length","raw","parseInt","column","calculateWinner","setState","concat","handleBoardStyle","winner","background","indexOf","handleHistoryClick","step","handleOrderClick","moves","map","move","desc","reverse","status","lines","a","b","c","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n/**\n * 函数组件\n */\nfunction Square (props) {\n  return (\n    <button\n      className='square'\n      onClick={props.onClick}\n      style={props.style}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare (i) {\n    var board = []\n    for (let j = 0; j < 3; j++) {\n      board.push(\n        <Square\n          key={i + j * 3}\n          value={this.props.squares[i + j * 3]}\n          onClick={() => this.props.onClick(i + j * 3)}\n          style={this.props.style(i + j * 3)}\n        />\n      )\n    }\n    return board;\n  }\n\n  render () {\n    var board = []\n    for (let i = 0; i < 3; i++) {\n      board.push(\n        <div className='board-row' key={i}>\n          {this.renderSquare(i)}\n        </div>\n      )\n    }\n    return (\n      <div>\n        {board}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      order: false,//排列方式，默认升序\n      history: [{\n        squares: Array(9).fill(null),\n        coordinates: [1, 1],//坐标\n      }],\n      stepNumber: 0,//正在查看哪一项历史纪录\n      xIsNext: true,//默认 '玩家X' 先手\n    };\n  }\n\n  handleBoardClick (i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1)\n    const current = history[history.length - 1]//使用最新一次历史记录来确定并展示游戏的状态\n    const squares = current.squares.slice()//创建副本，不可变对象\n    const raw = parseInt(i / 3) + 1\n    const column = (i + 1) % 3 === 0 ? 3 : (i + 1) % 3\n    if (calculateWinner(squares) || squares[i]) {\n      //决出胜者 或 格子填满时不做处理\n      return\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O'//更新玩家\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        coordinates: [raw, column],\n      }]),//不会改变原数组\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,//切换玩家\n    })\n  }\n\n  handleBoardStyle (winner, i) {\n    const style = {\n      background: 'yellow',\n    }\n    return winner && winner.indexOf(i) > -1 ? style : null\n  }\n\n  handleHistoryClick (step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    })\n  }\n\n  handleOrderClick () {\n    const order = this.state.order\n    this.setState({\n      order: !order,\n    })\n  }\n\n  render () {\n    const history = this.state.history\n    const current = history[this.state.stepNumber]//使用最新一次历史记录来确定并展示游戏的状态\n    const winner = calculateWinner(current.squares)//判断胜者玩家\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move + '  (' + step.coordinates + ')' :\n        'Go to game start'\n      return (\n        <li key={move}>\n          <button\n            className={\n              (move === this.state.stepNumber) ?\n                'history-highlight' :\n                'history-normal'\n            }//加粗显示当前选择的项目\n            onClick={() => this.handleHistoryClick(move)}>\n            {desc}\n          </button>\n        </li>\n      );\n    })\n\n    if (this.state.order) {\n      //改变排列方式\n      moves.reverse()\n    }\n\n    let order = this.state.order ? 'Ascending' : 'Descending'\n    let status\n    if (winner) {\n      status = 'Winner: ' + current.squares[winner[0]]\n    } else if (this.state.stepNumber === 9) {\n      //平局\n      status = 'Draw'\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\n    }\n\n    return (\n      <div className='game'>\n        <div className='game-board'>\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleBoardClick(i)}\n            style={(i) => this.handleBoardStyle(winner, i)}//高亮赢家连续格子\n          />\n        </div>\n        <div className='game-info'>\n          <button onClick={() => this.handleOrderClick()}>\n            {order}\n          </button>\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner (squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ]\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i]\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return lines[i]\n    }\n  }\n  return null\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}